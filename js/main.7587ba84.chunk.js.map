{"version":3,"sources":["../prb-math/dist/helpers/numbers.js","getWeb3.js","components/TimeLine.jsx","components/StartScreen.jsx","components/Menu.jsx","App.js","serviceWorker.js","index.js","Synchronization.js","../prb-math/dist/helpers/math.js","../prb-math/dist/helpers/constants.js","numberUtil.js","BenchmarkClient.js"],"names":["__importDefault","this","mod","__esModule","Object","defineProperty","exports","value","bn","bignumber_1","from_exponential_1","x","xs","includes","default","BigNumber","from","getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","console","log","web3","Web3","request","method","length","reqAccounts","accounts","events","status","date","icon","color","content","customizedContent","item","title","customizedMarker","className","style","backgroundColor","TimeLine","align","marker","StartScreen","Menu","navigateToPage","path","props","history","push","items","label","command","model","Component","withRouter","History","createBrowserHistory","App","componentDidMount","eth","net","getId","networkId","setState","currentAccount","client","BenchmarkClient","on","handleChainChanged","handleAccountsChanged","showPersistentError","error","showError","message","toast","current","show","severity","summary","detail","life","sticky","showInfo","state","storageValue","contract","bind","React","createRef","_chainId","location","reload","ParticipateScreen","lazy","BenchmarkCreationScreen","ImprintScreen","ArchitectureScreen","ref","fallback","exact","Boolean","hostname","match","PrimeReact","ripple","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","attributes","Synchronization","actualized","DateTime","fromISO","refresh","now","diff","localforage","keys","entries","Array","Set","map","e","split","returnValues","getItem","all","address","data","foundData","i","element","needsActualization","contribution","key","setItem","removeItem","foundItem","updateItem","toISO","clear","mbn","sqrt","pow","log2","log10","ln","gm","floor","exp2","exp","ceil","mathjs_1","math","create","number","precision","bignumber","toString","y","mul","SQRT_MAX_UD60x18_DIV_BY_SCALE","SQRT_MAX_SD59x18_DIV_BY_SCALE","SQRT_MAX_UD60x18","SQRT_MAX_SD59x18","SCALE","PI","MIN_WHOLE_SD59x18","MIN_SD59x18","MAX_WHOLE_UD60x18","MAX_WHOLE_SD59x18","MAX_UD60x18","MAX_SD59x18","HALF_SCALE","EPSILON_MAGNITUDE","EPSILON","E","evm_fp_1","numbers_1","toPrecision","num","fp","fromPrecision","numalike","formatted","formatFixed","toNumber","BlockChainInteractor","call","estimateGas","gasestimate","getGasPrice","gasprice","round","toFixed","send","gas","gasPrice","str","utils","padLeft","toHex","getAccounts","account","BenchmarkFactory","benchmarkName","lowerBound","upperBound","benchmarkUnit","desc","Error","paillierBigint","publicKey","privateKey","priv","lambda","mu","pub","n","g","nSquared","zero","bigintConversion","encrypt","BenchMark","Contract","benchmarkContract","abi","deploy","bytecode","arguments","toWeirdString","deployerFn","executewithGas","returnValue","_address","provider","BenchMarkInstance","force","getAccount","storageItem","methods","benchmark","result","response","name","description","average","averageRated","upper_bound","lower_bound","unit","hexToUtf8","BigInt","k","decrypt","sum","getAverageRating","addItem","AggregateReady","getDetails","details","precisionValue","pubKey","getEnc","encryptedValue","participate","replace","JSON","parse","substring","percent","total","referenceValue","halb","percentage","viertel","dreiviertel","minushalb","plusviertel","plushalb","plusdreiviertel","plushundert"],"mappings":"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","file":"static/js/main.7587ba84.chunk.js","sourcesContent":["\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bn = void 0;\n\nvar bignumber_1 = require(\"@ethersproject/bignumber\");\n\nvar from_exponential_1 = __importDefault(require(\"from-exponential\"));\n\nfunction bn(x) {\n  var xs = x;\n\n  if (x.includes(\"e\")) {\n    xs = from_exponential_1.default(x);\n  }\n\n  return bignumber_1.BigNumber.from(xs);\n}\n\nexports.bn = bn;","import Web3 from \"web3\";\n\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        \n        try {\n          console.log(\"window.ethereum\")\n        const web3 = new Web3(window.ethereum);\n        \n        \n\n        let accounts = await window.ethereum.request({ method: 'eth_accounts' })\n        if(accounts.length === 0){\n          reject(\"Select an account\")\n        }\n        \n\n        let reqAccounts = await window.ethereum.request({ method: 'eth_requestAccounts' })\n        \n\n          // Accounts now exposed\n          resolve({web3, ethereum: window.ethereum, accounts: reqAccounts});\n        } catch (error) {\n          reject(\"Zugriff auf MetaMask fehlgeschlagen, bitte Seite neu laden\")\n          \n        }\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        reject(\"Zugriff auf geeignete Ethereum Erweiterung (wie z.B. MetaMask) fehlgeschlagen. Bitte installieren sie MetaMask\")\n      }\n    });\n  });\n\nexport default getWeb3;\n","import React from \"react\";\nimport { Timeline } from 'primereact/timeline';\nimport { Card } from 'primereact/card';\nexport const events = [\n    { status: 'Benchmark wird erstellt', date: '15/10/2020 10:30', icon: 'pi pi-cog', color: \"#2196F3\", content: \"Der Benchmark wird als Smart Contract von einer initiierende Partei auf einer Etherum-basierten Blockchain online gestellt.\" },\n    { status: 'Benchmark wird an Nutzende verteilt', date: '15/10/2020 14:00', icon: 'pi pi-cog', color: '#607D8B', content: \"Die Nutzenden erhalten die Adresse des Smart Contracts, die sie in ihre Webanwendung eintragen können.\" },\n    { status: 'Nutzende tragen eigene Daten ein', date: '15/10/2020 16:15', icon: 'pi pi-pencil', color: '#607D8B', content: \"Die Nutzenden tragen eigene Werte innerhalb der vorgegebenen Wertegrenzen ein.\" },\n    { status: 'Warten auf andere Nutzende', icon: \"pi pi-spin pi-spinner\", color: '#607D8B', content: \"Die Nutzenden warten auf die Eintragungen anderer Nutzenden\"},\n    { status: 'Ab > 3 Ergebnissen ist das Resultat zugänglich', date: '16/10/2020 10:00', icon: 'pi pi-check', color: '#4caf50', content: \"Sobald die Marke von drei eingetragenen Werten überschritten wird, können die Nutzenden das aktuelle Resultat einsehen.\" }\n];\n\nconst customizedContent = (item) => {\n    return (\n        <Card title={item.status}>\n            {item.content}\n        </Card>\n    );\n};\n\nconst customizedMarker = (item) => {\n        return (\n        <span className=\"custom-marker p-shadow-2\" style={{ backgroundColor: item.color }}>\n            <i className={item.icon}></i>\n        </span>\n    );\n};\n\nexport function TimeLine(){\n  return(<Timeline value={events} align=\"alternate\" content={customizedContent} marker={customizedMarker} className=\"p-p-0\"/>)\n}","import React from \"react\";\nimport { TimeLine } from \"./TimeLine\";\n\nexport function StartScreen() {\n    return (<div className=\"p-grid\">\n        <div className=\"p-col-10 p-offset-1\">\n            <TimeLine />\n        </div>\n\n    </div>)\n}","import React, { Component } from \"react\";\nimport { MegaMenu } from 'primereact/megamenu';\nimport { withRouter } from 'react-router'\n\nexport class Menu extends Component{\n    \n    \n    // See http://4youngpadawans.com/primereact-menubar-with-react-router/\n    navigateToPage = (path) => {\n\t\tthis.props.history.push(path);\n\t}\n\n    render(){\n        const items = [\n            {\n                label: 'Home', icon: 'pi pi-fw pi-home', command:()=>{ this.navigateToPage('/') }, \n            },\n            {\n                label: 'An einem Benchmark teilnehmen', icon: 'pi pi-fw pi-file-excel', command:()=>{ this.navigateToPage('/participate') }, \n            },\n            {\n                label: 'Benchmark erstellen', icon: 'pi pi-fw pi-cog', command:()=>{ this.navigateToPage('/create') },\n            },\n            {\n                label: 'Architektur', icon: 'pi pi-fw pi-briefcase', command:()=>{this.navigateToPage('/architecture')}\n            },\n            {\n                label: 'Impressum', icon: 'pi pi-fw pi-users', command:()=>{this.navigateToPage('/imprint')}\n            }\n        ]\n        return(<MegaMenu  model={items} className=\"p-mb-4\" />)\n    }\n    \n}\n\n\nexport default withRouter(Menu)","import React, { Component, lazy, Suspense } from \"react\";\n// @ts-ignore\nimport getWeb3 from \"./getWeb3\";\n\nimport \"./App.css\";\nimport { StartScreen } from \"components/StartScreen\";\nimport Menu from \"components/Menu\";\nimport { createBrowserHistory } from 'history';\nimport { Route, Router, Switch } from \"react-router\";\nimport { Toast } from 'primereact/toast';\nimport { BenchmarkClient } from \"BenchmarkClient\";\n\n\n\nlet History = createBrowserHistory();\n\n\n\nclass App extends Component {\n\n\n  constructor(props) {\n    super(props);\n    this.state = { storageValue: 0, web3: null, accounts: null, contract: null, currentAccount: null, client: null };\n\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this);\n    this.handleChainChanged = this.handleChainChanged.bind(this)\n\n    this.toast = React.createRef();\n  }\n\n  handleChainChanged(_chainId) {\n    // We recommend reloading the page, unless you must do otherwise\n    window.location.reload();\n  }\n\n  handleAccountsChanged(accounts) {\n    if (this.state) {\n      console.log(\"Accounts changed\", accounts, this.state.currentAccount)\n      if (accounts.length === 0) {\n        // MetaMask is locked or the user has not connected any accounts\n        this.showError('Please connect to MetaMask.');\n      } else if (accounts[0] !== this.state.currentAccount) {\n        this.setState({ currentAccount: accounts[0] })\n      }\n    } else {\n      console.log(\"React timing issue\", this, this.state)\n    }\n\n  }\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const { web3, ethereum, accounts } = await getWeb3();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      console.log(networkId)\n\n      this.setState({ web3, accounts, currentAccount: accounts[0], networkId, client: new BenchmarkClient(web3, accounts[0]) })\n\n      ethereum.on('chainChanged', this.handleChainChanged);\n      ethereum.on('accountsChanged', this.handleAccountsChanged);\n\n      // const deployedNetwork = SimpleStorageContract.networks[networkId];\n      // const instance = new BenchmarkClient(\"0x26912E00C4698e3F1E391B0806473e6F83033507\", web3)\n      /*\n            // Set web3, accounts, and contract to the state, and then proceed with an\n            // example of interacting with the contract's methods.\n            this.setState({ web3, accounts, contract: instance }, this.runExample);*/\n    } catch (error) {\n\n      if (typeof error === 'string') {\n        this.showPersistentError(\n          error,\n        );\n      } else {\n        // Catch any errors for any of the above operations.\n        this.showPersistentError(\n          `Failed to load web3, accounts, or contract. Check console for details.`,\n        );\n\n\n        console.error(error);\n      }\n\n    }\n  };\n\n\n  showError = (message) => {\n    this.toast.current.show({ severity: 'error', summary: 'Fehler', detail: message, life: 5000 });\n  }\n\n  showPersistentError = message => {\n    this.toast.current.show({ severity: 'error', summary: 'Fehler', detail: message, sticky: true });\n  }\n\n  showInfo = (message) => {\n    this.toast.current.show({ severity: 'info', summary: 'Info', detail: message, life: 5000 })\n  }\n\n\n  render() {\n    window.web3 = this.state.web3\n    const ParticipateScreen = lazy(() => import(\"components/BenchmarkParticipateScreen\"));\n    const BenchmarkCreationScreen = lazy(() => import(\"components/BenchmarkCreationScreen\"));\n    const ImprintScreen = lazy(() => import(\"components/ImprintScreen\"));\n    const ArchitectureScreen = lazy(() => import(\"components/ArchitectureScreen\"))\n    return (\n      <div className=\"App\">\n        <Toast ref={this.toast} />\n        {!this.state.web3 ? <p>See Error Message(s)</p> :\n          <Router history={History}>\n            <Menu />\n            <Suspense fallback={<div>Loading component...</div>}>\n              <Switch>\n                <Route path=\"/create\">\n                  <BenchmarkCreationScreen web3={this.state.web3} currentAccount={this.state.currentAccount} client={this.state.client} />\n                </Route>\n                <Route path=\"/participate\">\n                  <ParticipateScreen web3={this.state.web3} accounts={this.state.accounts} currentAccount={this.state.currentAccount} client={this.state.client} />\n                </Route>\n                <Route path=\"/imprint\">\n                  <ImprintScreen />\n                </Route>\n                <Route path=\"/architecture\">\n                  <ArchitectureScreen />\n                </Route>\n                <Route path=\"/\" exact>\n                  <StartScreen />\n                </Route>\n\n              </Switch>\n            </Suspense>\n          </Router>}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PrimeReact from 'primereact/api';\n\nimport 'primereact/resources/themes/saga-blue/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport 'primeflex/primeflex.css';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nPrimeReact.ripple = true;\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import localforage from \"localforage\";\nimport { DateTime } from \"luxon\";\n\nconst attributes = [\"name\", \"description\", \"entries\", \"sum\", \"upper_bound\", \"lower_bound\", \"unit\", \"address\", \"contribution\", \"refresh\", \"actualized\"]\nconst timeOutMinutes = 10;\nexport class Synchronization {\n    \n\n    \n\n    static needsActualization(item) {\n        if (item.actualized) {\n            let actualized = DateTime.fromISO(item.actualized)\n            let current = DateTime.now();\n            let refresh = current.diff(actualized, \"minutes\")[\"minutes\"] > timeOutMinutes;\n            return { ...item, refresh }\n        } else {\n            return { ...item, refresh: true }\n        }\n    }\n\n    static async getAll() {\n        await localforage.ready();\n        const keys = await localforage.keys()\n        const entries = Array.from(new Set(keys.map(e => e.split('|')[0])))\n        const returnValues = entries.map(Synchronization.getItem)\n        let all =  await Promise.all(returnValues)\n        return all;\n    }\n\n\n    static async getItem(address) {\n        await localforage.ready();\n        let data = await Promise.all(attributes.map(e => localforage.getItem(address + '|' + e)))\n        let foundData = {};\n\n        for (let i = 0; i < data.length; i++) {\n            const element = data[i];\n            foundData[attributes[i]] = element;\n        }\n        if (Object.keys(foundData).length > 1) {\n            return Synchronization.needsActualization(foundData)\n        } else {\n            return null;\n        }\n    }\n\n    static async addItem(data, contribution) {\n        await localforage.ready();\n\n        if (!await Synchronization.getItem(data.address)) {\n            for (let i = 0; i < attributes.length; i++) {\n                const key = attributes[i];\n\n                await localforage.setItem(data.address + '|' + key, data[key])\n            }\n        }\n\n    }\n\n    static async removeItem(address) {\n        await localforage.ready();\n        try {\n            for (let i = 0; i < attributes.length; i++) {\n                const key = attributes[i];\n\n                await localforage.removeItem(address + '|' + key)\n            }\n        } catch (e) {\n\n        }\n\n    }\n\n    static async updateItem(item) {\n        await localforage.ready();\n        const foundItem = await Synchronization.getItem(item.address)\n\n        let updateItem = Synchronization.needsActualization({ ...foundItem, ...item, actualized: DateTime.now().toISO() })\n        \n        \n        for (let i = 0; i < attributes.length; i++) {\n            const key = attributes[i];\n\n            await localforage.setItem(updateItem.address + '|' + key, updateItem[key])\n        }\n    }\n\n\n    static async purge() {\n        await localforage.ready();\n        await localforage.clear();\n    }\n}\n\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mbn = exports.sqrt = exports.pow = exports.log2 = exports.log10 = exports.ln = exports.gm = exports.floor = exports.exp2 = exports.exp = exports.ceil = void 0;\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\nvar mathjs_1 = require(\"mathjs\");\n\nvar config = {\n  number: \"BigNumber\",\n  precision: 79\n};\nvar math = mathjs_1.create(mathjs_1.all, config);\nvar mbn = math.bignumber;\nexports.mbn = mbn;\n\nfunction ceil(x) {\n  return mbn(x).ceil().toString();\n}\n\nexports.ceil = ceil;\n\nfunction exp(x) {\n  return mbn(x).exp().toString();\n}\n\nexports.exp = exp;\n\nfunction exp2(x) {\n  return math.pow(mbn(\"2\"), mbn(x)).toString();\n}\n\nexports.exp2 = exp2;\n\nfunction floor(x) {\n  return mbn(x).floor().toString();\n}\n\nexports.floor = floor;\n\nfunction gm(x, y) {\n  return math.sqrt(mbn(x).mul(mbn(y))).toString();\n}\n\nexports.gm = gm;\n\nfunction ln(x) {\n  return math.log(mbn(x)).toString();\n}\n\nexports.ln = ln;\n\nfunction log10(x) {\n  return math.log10(mbn(x)).toString();\n}\n\nexports.log10 = log10;\n\nfunction log2(x) {\n  return math.log2(mbn(x)).toString();\n}\n\nexports.log2 = log2;\n\nfunction pow(x, y) {\n  return math.pow(mbn(x), mbn(y)).toString();\n}\n\nexports.pow = pow;\n\nfunction sqrt(x) {\n  return math.sqrt(mbn(x)).toString();\n}\n\nexports.sqrt = sqrt;","\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SQRT_MAX_UD60x18_DIV_BY_SCALE = exports.SQRT_MAX_SD59x18_DIV_BY_SCALE = exports.SQRT_MAX_UD60x18 = exports.SQRT_MAX_SD59x18 = exports.SCALE = exports.PI = exports.MIN_WHOLE_SD59x18 = exports.MIN_SD59x18 = exports.MAX_WHOLE_UD60x18 = exports.MAX_WHOLE_SD59x18 = exports.MAX_UD60x18 = exports.MAX_SD59x18 = exports.HALF_SCALE = exports.EPSILON_MAGNITUDE = exports.EPSILON = exports.E = void 0;\n\nvar evm_fp_1 = __importDefault(require(\"evm-fp\"));\n\nvar numbers_1 = require(\"./numbers\");\n\nexports.E = \"2.718281828459045235\";\nexports.EPSILON = evm_fp_1.default(\"1e-6\");\nexports.EPSILON_MAGNITUDE = numbers_1.bn(\"1e6\");\nexports.HALF_SCALE = \"0.5\";\nexports.MAX_SD59x18 = \"57896044618658097711785492504343953926634992332820282019728.792003956564819967\";\nexports.MAX_UD60x18 = \"115792089237316195423570985008687907853269984665640564039457.584007913129639935\";\nexports.MAX_WHOLE_SD59x18 = \"57896044618658097711785492504343953926634992332820282019728\";\nexports.MAX_WHOLE_UD60x18 = \"115792089237316195423570985008687907853269984665640564039457\";\nexports.MIN_SD59x18 = \"-57896044618658097711785492504343953926634992332820282019728.792003956564819968\";\nexports.MIN_WHOLE_SD59x18 = \"-57896044618658097711785492504343953926634992332820282019728\";\nexports.PI = \"3.141592653589793238\";\nexports.SCALE = \"1\";\nexports.SQRT_MAX_SD59x18 = \"240615969168004511545033772477.625056927114980741\";\nexports.SQRT_MAX_UD60x18 = \"340282366920938463463374607431.768211455999999999\";\nexports.SQRT_MAX_SD59x18_DIV_BY_SCALE = \"240615969168004511545.033772477625056927\"; // biggest number whose square fits within int256\n\nexports.SQRT_MAX_UD60x18_DIV_BY_SCALE = \"340282366920938463463.374607431768211455\"; // biggest number whose square fits within uint256","import {MAX_UD60x18} from \"./dist/helpers/constants\"\nimport {mbn} from \"./dist/helpers/math\"\nimport { BigNumber, formatFixed } from \"@ethersproject/bignumber\";\nimport fp from \"evm-fp\";\n\n// @ts-ignore\nexport const toPrecision = (num) => {\n    if(typeof num === 'number'){\n        num = num+ \"\"\n    }\n    return BigNumber.from(fp(num, 18)).toString();\n}\n\n// @ts-ignore\nexport const fromPrecision = (numalike, number = true) => {\n    let formatted = formatFixed(numalike, 18);\n    if(number){\n        return +formatted\n    }else{\n        return formatted\n    }\n    \n}\n\n\nexport const isInBounds = (num) => {\n    const maxvalue = MAX_UD60x18\n    return mbn(0).lte(mbn(num)) && mbn(maxvalue).gte(mbn(num));\n}\n\nexport const maxSafeValueLength = MAX_UD60x18.length;\n\nexport const maxSafeValue = mbn(MAX_UD60x18).toNumber();\n\n\n","/* global BigInt */\nimport { fromPrecision, toPrecision } from \"./numberUtil\";\n// @ts-ignore\nimport benchmarkContract from \"./contracts/BenchMark.json\";\nimport Web3 from \"web3\";\nimport { Synchronization } from \"./Synchronization\";\nimport * as paillierBigint from \"paillier-bigint\";\nimport * as bigintConversion from \"bigint-conversion\";\nclass BlockChainInteractor {\n    constructor(web3) {\n        this.web3 = web3;\n    }\n    async executewithGas(method, from, call = true) {\n        let gasestimate = await method.estimateGas({ from });\n        let gasprice = await this.web3.eth.getGasPrice();\n        let round = (a) => a.toFixed(0);\n        if (!call) {\n            let send = await method.send({ from, gas: round(gasestimate * 1.5), gasPrice: round(+gasprice * 1.105) });\n            return send;\n        }\n        return await method.call({ from, gas: round(gasestimate * 1.5), gasPrice: round(+gasprice * 1.1) });\n    }\n    toWeirdString(str) {\n        return Web3.utils.padLeft(Web3.utils.toHex(str), 64);\n    }\n    async getAccounts() {\n        let [account] = await this.web3.eth.getAccounts();\n        return account;\n    }\n}\nexport class BenchmarkFactory extends BlockChainInteractor {\n    async provision(benchmarkName, lowerBound, upperBound, benchmarkUnit, desc, account) {\n        if (!benchmarkName || typeof lowerBound == \"undefined\" || typeof upperBound == \"undefined\" || !benchmarkUnit || !desc) {\n            throw new Error(\"Required parameters missing\");\n        }\n        const { publicKey, privateKey } = await paillierBigint.generateRandomKeys(128);\n        let pub = { n: \"\", g: \"\", nSquared: \"\", zero: \"\" };\n        let priv = { lambda: \"\", mu: \"\" };\n        pub.n = '0x' + bigintConversion.bigintToHex(publicKey.n);\n        pub.g = '0x' + bigintConversion.bigintToHex(publicKey.g);\n        pub.nSquared = '0x' + bigintConversion.bigintToHex(publicKey.n ** 2n);\n        pub.zero = '0x' + bigintConversion.bigintToHex(publicKey.encrypt(0n));\n        priv.lambda = '0x' + bigintConversion.bigintToHex(privateKey.lambda);\n        priv.mu = '0x' + bigintConversion.bigintToHex(privateKey.mu);\n        const BenchMark = new this.web3.eth.Contract(benchmarkContract.abi);\n        let deployerFn = await BenchMark.deploy({\n            data: benchmarkContract.bytecode,\n            arguments: [this.toWeirdString(benchmarkName), this.web3.utils.toHex(toPrecision(lowerBound)), this.web3.utils.toHex(toPrecision(upperBound)), this.toWeirdString(benchmarkUnit), this.toWeirdString(desc),\n            pub.n, pub.g, pub.nSquared, priv.lambda, priv.mu, pub.zero],\n        });\n        if (!account) {\n            account = await this.getAccounts();\n            let returnValue = await this.executewithGas(deployerFn, account, false);\n            return new BenchmarkClient(this.web3, returnValue._address, account);\n        }\n        else {\n            let returnValue = await this.executewithGas(deployerFn, account, false);\n            return new BenchmarkClient(this.web3, returnValue._address, account);\n        }\n    }\n}\nexport class BenchmarkClient extends BlockChainInteractor {\n    constructor(provider, address, account) {\n        super(provider);\n        this.BenchMarkInstance = new this.web3.eth.Contract(benchmarkContract.abi, address);\n        this.address = address;\n        this.account = account;\n    }\n    async getAccount() {\n        if(!this.account){\n            const [account] = await this.web3.eth.getAccounts();\n            this.account = account;\n        }\n    }\n    async getDetails(force = false, contribution) {\n        await this.getAccount()\n        const storageItem = await Synchronization.getItem(this.address);\n        if (!storageItem || storageItem.refresh || force) {\n            const result = await this.executewithGas(this.BenchMarkInstance.methods.benchmark(), this.account);\n            let response = { name: null, description: null, entries: null, average: null, averageRated: null, upper_bound: null, lower_bound: null, unit: null, address: null, n: null, g: null };\n            response.name = this.web3.utils.hexToUtf8(result.name);\n            response.description = this.web3.utils.hexToUtf8(result.description);\n            //@ts-ignore\n            response.entries = +result.entries.toString();\n            // @ts-ignore\n            response.n = BigInt(result.n);\n            // @ts-ignore\n            response.g = BigInt(result.g);\n            const lambda = BigInt(result.lambda);\n            const mu = BigInt(result.mu);\n            const n = BigInt(result.n);\n            const g = BigInt(result.g);\n            const k = new paillierBigint.PrivateKey(lambda, mu, new paillierBigint.PublicKey(n, g));\n            // @ts-ignore\n            response.average = +fromPrecision(k.decrypt(BigInt(result.sum))) / response.entries;\n            if (contribution) {\n                // @ts-ignore\n                response.averageRated = BenchmarkClient.getAverageRating(contribution, response.average);\n            }\n            //@ts-ignore\n            response.upper_bound = fromPrecision(result.upper_bound.toString());\n            //@ts-ignore\n            response.lower_bound = fromPrecision(result.lower_bound.toString());\n            response.unit = this.web3.utils.hexToUtf8(result.unit);\n            response.address = this.BenchMarkInstance._address;\n            if ((storageItem && storageItem.refresh === true) || force) {\n                await Synchronization.updateItem(response);\n            }\n            else {\n                await Synchronization.addItem(response);\n            }\n            return response;\n        }\n        else {\n            return storageItem;\n        }\n    }\n    getEmitter() {\n        return this.BenchMarkInstance.events.AggregateReady();\n    }\n    async getEnc(value) {\n        await this.getAccount()\n        let { n, g } = await Synchronization.getItem(this.address);\n        if (!n || !g) {\n            let details = await this.getDetails(true);\n            n = details.n;\n            g = details.g;\n        }\n        const precisionValue = toPrecision(value);\n        const pubKey = new paillierBigint.PublicKey(BigInt(n), BigInt(g));\n        let returnValue = '0x' + bigintConversion.bigintToHex(pubKey.encrypt(BigInt(precisionValue)));\n        return returnValue;\n    }\n    async participate(value) {\n        await this.getAccount()\n        const encryptedValue = await this.getEnc(value);\n        // console.log(encryptedValue)\n        const response = await this.executewithGas(this.BenchMarkInstance.methods.participate(encryptedValue), this.account, false);\n        await Synchronization.updateItem({ contribution: value, address: this.address });\n        return response;\n    }\n    async getResults(contribution) {\n        await this.getAccount()\n        /*const internalContribution = toPrecision(contribution)\n        const encryptedValue = await this.getEnc(internalContribution)\n\n        let best = await this.executewithGas(this.BenchMarkInstance.methods.bestRating(encryptedValue), this.account);\n        let average = await this.executewithGas(this.BenchMarkInstance.methods.average(), this.account);\n        let averageRated = await this.executewithGas(this.BenchMarkInstance.methods.averageRating(encryptedValue), this.account);\n        return { best: parseInt(best), average: fromPrecision(average), averageRated: parseInt(averageRated) };*/\n        const { average, averageRated,entries } = await this.getDetails(true, contribution);\n        if(entries < 3){\n            throw new Error(\"Keine Ergebnisse - Nicht genügend Teilnehmer\")\n        }\n        return { average, averageRated };\n    }\n\n\n    static decodeErrorMessage(e) {\n        if (e.message.includes(\"Internal JSON-RPC\")) {\n            if (e.message.includes(\"VM Exception while processing transaction: revert\")) {\n                let a = e.message.replace(\"VM Exception while processing transaction: revert\", \"Smart Contract Fehler:\");\n                let msg = JSON.parse(a.substring(25)).message;\n                return msg;\n            }\n            else {\n                let msg = JSON.parse(e.message.substring(25)).message;\n                return msg;\n            }\n        }\n        else {\n            return e.message;\n        }\n    }\n    static percentage(percent, total) {\n        return ((percent / 100) * total);\n    }\n    static getAverageRating(value, referenceValue) {\n        const halb = BenchmarkClient.percentage(50, referenceValue);\n        const viertel = BenchmarkClient.percentage(25, referenceValue);\n        const dreiviertel = BenchmarkClient.percentage(75, referenceValue);\n        const minushalb = BenchmarkClient.percentage(1, referenceValue);\n        const plusviertel = BenchmarkClient.percentage(125, referenceValue);\n        const plushalb = BenchmarkClient.percentage(150, referenceValue);\n        const plusdreiviertel = BenchmarkClient.percentage(175, referenceValue);\n        const plushundert = BenchmarkClient.percentage(200, referenceValue);\n        if (value === referenceValue) {\n            return 5;\n        }\n        else if (value < referenceValue && value > dreiviertel) {\n            return 5;\n        }\n        else if (value < dreiviertel && value > halb) {\n            return 4;\n        }\n        else if (value < halb && value > viertel) {\n            return 3;\n        }\n        else if (value < viertel && value > minushalb) {\n            return 2;\n        }\n        else if (value < minushalb) {\n            return 1;\n        }\n        else if (value > referenceValue && value < plusviertel) {\n            return 5;\n        }\n        else if (value > plusviertel && value < plushalb) {\n            return 4;\n        }\n        else if (value > plushalb && value < plusdreiviertel) {\n            return 3;\n        }\n        else if (value > plusdreiviertel && value < plushundert) {\n            return 2;\n        }\n        else {\n            return 1;\n        }\n    }\n}"],"sourceRoot":""}
{"version":3,"sources":["components/participate/scale.jpeg","components/participate/SavedContracts.jsx","components/participate/BenchmarkInformations.jsx","components/participate/BenchmarkResult.jsx","components/participate/BenchmarkParticipation.jsx","components/BenchmarkParticipateScreen.jsx"],"names":["module","exports","AddContractComponent","props","addContract","inputAddress","a","Web3","utils","isAddress","console","error","showError","setState","contractInput","client","BenchmarkClient","web3","Synchronization","getItem","getDetails","name","description","entries","sum","upper_bound","lower_bound","unit","addItem","address","updateItem","window","location","reload","state","factory","BenchmarkFactory","bind","className","label","onClick","id","value","this","onChange","e","target","htmlFor","Component","SavedContracts","loadBenchmark","smartContractAddress","useState","visible","setVisible","filteredContracts","setContracts","emptyStorage","purge","preLoadBenchmark","useEffect","getAll","then","el","title","style","cursor","length","map","contract","key","template","backgroundColor","color","icon","BenchmarkInformations","details","setContract","min","max","readOnly","showValue","toString","toLocaleString","BenchmarkResultO","average","participants","entry","ratingValue","caverage","ownEntry","difference","Math","abs","averageRating","cancel","stars","cparticipants","src","scale","alt","BenchmarkResult","showInfo","message","toast","current","show","severity","summary","detail","life","requestResults","item","log","getResults","contribution","averageRated","actualized","lastRefresh","errorMessage","msg","decodeErrorMessage","includes","best","React","createRef","eventEmitter","getEmitter","on","event","subTitle","DateTime","fromISO","DATETIME_MED","ref","text","BenchmarkParticipation","entryInput","setEntryInput","submit","input","eth","getAccounts","account","participate","disabled","mode","locale","minFractionDigits","smartContractParticipants","smartContractResult","result","smartContractUnit","smartContractEntry","rating","ParticipateScreenComponent","smartContractInterface","validateAddress","raiseError","element","smartContractDetails"],"mappings":"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","file":"static/js/9.24f19983.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/scale.fde08841.jpeg\";","import React, { useState, Component, useEffect } from \"react\"\nimport { Card } from \"primereact/card\";\nimport { Button } from \"primereact/button\";\nimport { InputText } from 'primereact/inputtext';\nimport { Chip } from 'primereact/chip';\nimport Web3 from 'web3';\nimport { BenchmarkClient, BenchmarkFactory } from \"BenchmarkClient\";\nimport { Synchronization } from \"Synchronization\";\n\n\nclass AddContractComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            contractInput: \"\",\n        }\n        this.factory = new BenchmarkFactory(props.web3)\n        this.addContract = this.addContract.bind(this)\n    }\n\n    addContract = async (inputAddress) => {\n        if (!Web3.utils.isAddress(inputAddress)) {\n            console.error(\"No adress\")\n            this.props.showError(\"Konnte nicht hinzugefügt werden - Addresse nicht valide\")\n            this.setState({ contractInput: \"\" })\n        } else {\n\n            try {\n                const client = new BenchmarkClient(this.props.web3, inputAddress)\n                if (!await Synchronization.getItem(inputAddress)) {\n                    const { name, description, entries, sum, upper_bound, lower_bound, unit } = await client.getDetails()\n                    await Synchronization.addItem({ name, description, entries, sum, upper_bound, lower_bound, unit, address: inputAddress })\n                    this.setState({ contractInput: \"\" })\n                } else {\n                    const { name, description, entries, sum, upper_bound, lower_bound, unit } = await client.getDetails()\n                    await Synchronization.updateItem({ name, description, entries, sum, upper_bound, lower_bound, unit, address: inputAddress })\n                    this.setState({ contractInput: \"\" })\n                    window.location.reload()\n                }\n\n            } catch (e) {\n                this.props.showError(\"Adresse konnte nicht gefunden werden\")\n                this.setState({ contractInput: \"\" })\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"p-inputgroup p-mt-5\">\n                <Button label=\"Add\" onClick={() => this.addContract(this.state.contractInput)} />\n                <span className=\"p-float-label\">\n                    <InputText id=\"contract\" value={this.state.contractInput} onChange={(e) => this.setState({ contractInput: e.target.value })} />\n                    <label htmlFor=\"contract\">Contract</label>\n                </span>\n\n            </div>\n        )\n    }\n}\n\n\n\nexport const SavedContracts = ({ loadBenchmark, smartContractAddress, web3, showError }) => {\n    const [visible, setVisible] = useState(true)\n    const [filteredContracts, setContracts] = useState([])\n\n    const emptyStorage = async () => {\n        await Synchronization.purge()\n        setContracts([])\n    }\n\n\n    let preLoadBenchmark = async (address) => {\n        await loadBenchmark(address);\n        setVisible(!visible)\n    }\n\n    useEffect(() => {\n        Synchronization.getAll().then(el => {\n            setContracts(el)})\n    }, []);\n\n    \n\n\n        return (\n\n        <Card title=\"Gespeicherte Smart Contracts\" className=\"p-mb-4 p-mt-4\">\n            <div className=\"p-mb-4\">\n            {visible ? <i className=\"pi pi-angle-up\" onClick={() => setVisible(!visible)} style={{ cursor: \"pointer\" }} /> : <i className=\"pi pi-angle-down\" onClick={() => setVisible(!visible)} style={{ cursor: \"pointer\" }} />}\n            </div>\n            {visible ? <>\n                <div className=\"p-grid p-dir-col\">\n\n                    {filteredContracts.length === 0 ? \"No entries (add existing contracts via the form below or create one)\" : filteredContracts && filteredContracts.map(contract => (<div className=\"p-col\" style={{ cursor: \"pointer\" }} key={contract.address} onClick={() => preLoadBenchmark(contract.address)}>\n                        <Chip template={<>{contract.name} - {contract.address}</>} style={{ backgroundColor: (smartContractAddress === contract.address ? \"#00BCD4\" : \"\"), color: (smartContractAddress === contract.address ? \"white\" : \"\") }} />\n                    </div>))\n                    }\n                </div>\n\n\n                <AddContractComponent loadBenchmark={loadBenchmark} smartContractAddress={smartContractAddress} web3={web3} showError={showError} />\n                <Button label=\"Delete\" icon=\"pi pi-trash\" className=\"p-button-danger p-mt-3\" onClick={() => emptyStorage()} />\n            </>\n                : \"\"}\n        </Card>)\n\n    \n    \n\n    \n}","import React, { useState } from \"react\"\nimport { Card } from \"primereact/card\";\nimport { Knob } from 'primereact/knob';\nimport { Chip } from 'primereact/chip';\nimport { Synchronization } from \"Synchronization\";\n\n\n\nexport const BenchmarkInformations = ({\n    smartContractAddress,showError, details\n}) => {\n    const [contract, setContract] = useState(null);\n    const [visible, setVisible] = useState(true);\n\n    Synchronization.getItem(smartContractAddress).then(el => setContract(el))\n    \n    if(!contract){\n        return(<p>Loading...</p>)\n    }else{\n\n    return(\n    <Card title=\"Benchmark Informationen\" className=\"p-mb-4 p-mt-4\" >\n            <div className=\"p-mb-4\">\n            {visible ? <i className=\"pi pi-angle-up\" onClick={() => setVisible(!visible)} style={{ cursor: \"pointer\" }} /> : <i className=\"pi pi-angle-down\" onClick={() => setVisible(!visible)} style={{ cursor: \"pointer\" }} />}\n            </div>\n            {visible ?\n                    <div className=\"p-grid\">\n                    {!smartContractAddress ? <div className=\"p-col-12\">SmartContract nicht geladen, bitte oben selektieren</div>: <>\n\n                    <div className=\"p-col-4\">\n                            <p>Smart Contract Name</p>\n                        </div>\n\n                        <div className=\"p-col-8\">\n                            {!contract.name ? <p>Nicht gesetzt</p> : <p>{contract.name}</p>}\n                        </div>\n\n            \n\n                        <div className=\"p-col-4\">\n                            <p>Smart Contract Beschreibung</p>\n                        </div>\n\n                        <div className=\"p-col-8\">\n                            {!contract.description ? <p>Nicht gesetzt</p> :<p>{contract.description}</p>}\n                        </div>\n\n                        <div className=\"p-col-4\">\n                            <p>Smart Contract Adresse</p>\n                        </div>\n\n                        <div className=\"p-col-8\">\n                            {!smartContractAddress ? <p>\"Nicht gesetzt\"</p> : <Chip template={smartContractAddress}></Chip>}\n                        </div>\n\n                        <div className=\"p-col-4\">\n                            <p>\n                                Einheit\n                            </p>\n                        </div>\n\n                        <div className=\"p-col-8\">\n                            \n                            \n                                {!contract.unit ? <p>\"Keine Einheit gesetzt\"</p> : <Chip template={contract.unit}></Chip>}\n                            \n                        </div>\n\n                        <div className=\"p-col-4\">\n                            <p>\n                                Grenzen\n                            </p>\n                        </div>\n\n                        {!contract.lower_bound || !contract.upper_bound ?\n                            <div className=\"p-col-8\"><p>Nicht gesetzt</p></div> : <>\n                                <div className=\"p-col-4\">\n                                    <Knob value={contract.lower_bound} min={contract.lower_bound >= 0 ? contract.lower_bound : 0} max={contract.lower_bound < 0 ? 0 : contract.upper_bound} readOnly showValue={contract.upper_bound.toString().length < 5 && contract.lower_bound.toString().length < 5} />\n                                    {contract.upper_bound.toString().length > 5 || contract.lower_bound.toString().length > 5 ? contract.lower_bound.toLocaleString('de-DE') : \"\"}&nbsp;\n                                    <p>Mindestwert</p>\n                                </div>\n                                <div className=\"p-col-4\">\n                                    <Knob value={contract.upper_bound} min={contract.lower_bound >= 0 ? contract.lower_bound : 0} max={contract.upper_bound} readOnly showValue={contract.upper_bound.toString().length < 5 && contract.lower_bound.toString().length < 5} />\n                                    {contract.upper_bound.toString().length > 5 || contract.lower_bound.toString().length > 5 ? contract.upper_bound.toLocaleString('de-DE') : \"\"}&nbsp;\n                                    <p>Maximalwert</p>\n                                </div>\n                            </>\n                        }\n                        </>}\n\n                    </div> : \"\"}\n                </Card>)\n    }\n}","import React, { Component } from \"react\"\nimport { Card } from \"primereact/card\";\nimport { Chip } from 'primereact/chip';\nimport { Rating } from 'primereact/rating';\nimport { BenchmarkClient } from \"BenchmarkClient\";\nimport { Synchronization } from \"Synchronization\";\nimport { Message } from 'primereact/message';\nimport { Button } from \"primereact/button\";\nimport { DateTime } from \"luxon\";\nimport scale from './scale.jpeg';\nimport { Toast } from \"primereact/toast\";\n\n\n\nexport const BenchmarkResultO = ({\n    average,\n    unit,\n    participants,\n    entry,\n    ratingValue,\n}) => {\n    const caverage = <p>&empty; {average} {unit}</p>\n    const ownEntry = <p>Eigener Eintrag (lokal zwischengespeichert): {entry}</p>\n    const difference = <p>Differenz: {entry > (average) ? \"+\" : \"-\"} {Math.abs(average - entry)}</p>\n\n    const averageRating = <><Rating value={ratingValue} readOnly cancel={false} stars={5} />&nbsp;(Gemessen am Durchschnitt)</>\n\n    const cparticipants = <p>Teilnehmende: {participants}</p>\n\n\n    return (\n        <Card title=\"Benchmark Resultate\" className=\"p-mt-2\">\n            <div className=\"p-grid\">\n                    <div className=\"p-col-5\">\n                        {/* <Chart type=\"doughnut\" data={chartData} options={lightOptions} /> */}\n                        <img src={scale} alt=\"Skala\" />\n                    </div>\n                    <div className=\"p-col-7\">\n                        <div className=\"p-grid p-dir-col\">\n                        <div className=\"p-col\">\n                                <Chip template={cparticipants} />\n                            </div>\n                            <div className=\"p-col\">\n                                <Chip template={averageRating} />\n                            </div>\n                            <div className=\"p-col\"><Chip template={caverage}></Chip> </div>\n                            <div className=\"p-col\"><Chip template={ownEntry}></Chip> </div>\n                            <div className=\"p-col\"><Chip style={{ backgroundColor: entry > average ? \"#4caf50\" : \"#F57C00\", color: \"#ffffff\" }} template={difference}></Chip> </div>\n\n                        </div>\n                    </div>\n            </div>\n        </Card>)\n}\n\n\nexport class BenchmarkResult extends Component {\n    eventEmitter;\n    client;\n    constructor(props) {\n        super(props);\n        this.state = { best: null, average: null, averageRated: null, lastRefresh: null }\n        this.client = new BenchmarkClient(this.props.web3, this.props.smartContractAddress)\n        this.requestResults = this.requestResults.bind(this)\n        this.toast = React.createRef();\n        this.showInfo = this.showInfo.bind(this)\n    }\n\n    componentDidMount(){\n        Synchronization.getItem(this.props.smartContractAddress).then(({actualized}) => this.setState({lastRefresh: actualized}))\n        this.eventEmitter = this.client.getEmitter();\n        // this.eventEmitter.on(\"data\", console.log)\n        this.eventEmitter.on('data', (event) =>{\n            this.requestResults()\n            this.showInfo(\"New Results available\")\n        })\n    }\n\n    componentWillUnmount(){\n        this.eventEmitter = null;\n    }\n\n    showInfo = (message) => {\n        this.toast.current.show({ severity: 'info', summary: 'Info', detail: message, life: 5000 })\n    }\n\n    requestResults = async () => {\n\n        try {\n            const details = await this.client.getDetails(true)\n            const item = await Synchronization.getItem(this.props.smartContractAddress)\n            console.log(\"Detz\", details, item)\n\n            const { average, averageRated } = await this.client.getResults(item.contribution);\n\n            const {actualized, unit, contribution} = await Synchronization.getItem(this.props.smartContractAddress)\n\n            console.log({ average, averageRated }, {actualized, unit, contribution})\n\n            this.setState({ average, averageRated, lastRefresh: actualized, errorMessage: \"\", unit, participants: details.entries, entry:contribution })\n            console.log({ average, averageRated, lastRefresh: actualized, errorMessage: \"\", unit, participants: details.entries, entry:contribution })\n            await Synchronization.updateItem({ average, averageRated, ...details })\n        } catch (e) {\n            const msg = BenchmarkClient.decodeErrorMessage(e)\n            console.error(msg)\n            this.setState({ errorMessage: msg });\n\n            if (msg.includes(\"Not enough people have participated\")) {\n                this.setState({ errorMessage: \"Keine Ergebnisse - Nicht genügend Teilnehmer\" })\n            } else {\n                this.setState({ errorMessage: msg })\n            }\n        }\n\n\n\n    }\n\n    render() {\n\n        return (<Card title=\"Ergebnisse\" subTitle={\"Letzte Aktualisierung: \"+DateTime.fromISO(this.state.lastRefresh).toLocaleString(DateTime.DATETIME_MED)}>\n            <Toast ref={this.toast} />\n            {this.state.errorMessage ? <Message severity=\"error\" text={this.state.errorMessage} className=\"p-mb-3\"/> : \"\"}\n            <Button label=\"Ergebnisse laden\" onClick={() => this.requestResults()} />\n            {this.state.average && this.state.averageRated && !this.state.errorMessage && <BenchmarkResultO average={this.state.average} unit={this.state.unit} participants={this.state.participants} entry={this.state.entry} ratingValue={this.state.averageRated} />}\n        </Card>)\n        /*\n        if(this.state.errorMessage){\n            return <Card title=\"Ergebnisse\"><Message severity=\"error\" text={this.state.errorMessage} /></Card>\n        }else{\n          if(!this.state.best||!this.state.average||!this.state.averageRated){\n            return \n        }\n            return <><Toast ref={this.toast} /><p>{this.state.best},{this.state.average},{this.state.averageRated}</p></>\n        \n        }*/\n\n\n\n\n\n    }\n}","import { Card } from \"primereact/card\";\nimport React, { useEffect, useState } from \"react\";\nimport { InputNumber } from 'primereact/inputnumber';\nimport { BenchmarkResult } from \"./BenchmarkResult\";\nimport { Button } from \"primereact/button\";\nimport { BenchmarkClient } from \"BenchmarkClient\";\nimport { Synchronization } from \"Synchronization\";\n\n\n\nexport const BenchmarkParticipation = ({\n    smartContractAddress,\n    showError,\n    web3\n}) => {\n    const [entryInput, setEntryInput] = useState(0);\n    const [contract, setContract] = useState(null);\n\n    useEffect(() => {\n        Synchronization.getItem(smartContractAddress).then(el => setContract(el))\n    }, [smartContractAddress]);\n\n    \n\n    let submit = async (address, input) => {\n        try {\n            const [account] = await web3.eth.getAccounts();\n            const client = new BenchmarkClient(web3, address, account);\n            await client.participate(input)\n            const details = await client.getDetails()\n            await Synchronization.updateItem({...details, contribution: input}) \n            const contract = await Synchronization.getItem(smartContractAddress)\n            setContract(contract)\n        } catch (e) {\n\n            showError(BenchmarkClient.decodeErrorMessage(e))\n        }\n\n    }\n\n    if (!contract) {\n        return (<p>Loading...</p>)\n    } else {\n        return (\n            <div className=\"p-fluid p-grid, p-formgrid\">\n                <Card title=\"Benchmark Teilnahme\" className=\"\">\n                    <div className=\"p-field p-col-12\">\n                        <div className=\"p-inputgroup\">\n\n                            <Button label=\"Contribute\" onClick={() => typeof contract.contribution === \"number\" ? \"\" : submit(smartContractAddress, entryInput)} disabled={typeof contract.contribution === \"number\"} />\n                            <span className=\"p-float-label\">\n                            {/* <InputNumber value={entryInput} onValueChange={(e) => setEntryInput(e.value)} mode=\"decimal\" locale=\"de-DE\" minFractionDigits={2}/> */}\n                            {typeof contract.contribution !== \"number\" ? \n                                <InputNumber id=\"input\" value={entryInput} onChange={(e) => setEntryInput(e.value)} mode=\"decimal\" locale=\"de-DE\" minFractionDigits={2} \n                                 min={+contract.lower_bound} max={+contract.upper_bound} /> :\n                                <InputNumber value={contract.contribution} mode=\"decimal\" locale=\"de-DE\" disabled={true}/>}\n                                <label htmlFor=\"input\">Benchmark Input {contract.unit ? `(in ${contract.unit} )` : ''}</label>\n                            </span>\n                        </div>\n                    </div>\n                </Card>\n                <div className=\"p-col-12\">\n                    {typeof contract.contribution === \"number\" ?\n                        <BenchmarkResult \n                        smartContractAddress={smartContractAddress} \n                        smartContractParticipants={contract.participants} \n                        smartContractResult={contract.result} \n                        smartContractUnit={contract.unit} \n                        smartContractEntry={contract.contribution} \n                        ratingValue={contract.rating} \n                        web3={web3} /> :\n                        \"\"\n                    }\n                </div>\n            </div>)\n    }\n\n\n}","import React, { Component } from \"react\";\nimport { Toast } from 'primereact/toast';\n\nimport { SavedContracts } from \"./participate/SavedContracts\";\nimport { BenchmarkInformations } from \"./participate/BenchmarkInformations\";\nimport { BenchmarkParticipation } from \"./participate/BenchmarkParticipation\";\nimport { BenchmarkClient } from \"BenchmarkClient\";\n\n\nclass ParticipateScreenComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            smartContractAddress: null,\n            smartContractInterface: null\n        }\n\n        this.loadBenchmark = this.loadBenchmark.bind(this)\n        this.toast = React.createRef();\n        this.validateAddress = this.validateAddress.bind(this)\n    }\n\n    validateAddress(address, raiseError = true) {\n        if (!this.props.web3.utils.isAddress(address)) {\n            if (raiseError) {\n                this.showError(\"Adresse ist nicht valid!\")\n            }\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    async loadBenchmark(address) {\n        if (this.validateAddress(address)) {\n\n            try {\n                const [account] = await this.props.web3.eth.getAccounts();\n                const client = new BenchmarkClient(this.props.web3, address, account)\n\n                const element = await client.getDetails()\n                if(element){\n                    this.setState({\n                        smartContractAddress: address,\n                        smartContractDetails: element\n                    })\n                }\n                // this.props.addContract({ entry: null, participants: 3, result: 20, bestInClass: true, rating: 5, })\n\n            } catch (e) {\n                console.error(e)\n                this.showError(e.message)\n            }\n\n\n\n\n        }\n    }\n\n    showError = (message) => {\n        this.toast.current.show({ severity: 'error', summary: 'Fehler', detail: message, life: 5000 });\n    }\n\n    showInfo = (message) => {\n        this.toast.current.show({ severity: 'info', summary: 'Info', detail: message, life: 5000 })\n    }\n\n    render() {\n        return (<div className=\"p-grid\">\n            <div className=\"p-col-5\">\n                <Toast ref={this.toast} />\n\n                {/* <Card title=\"Aktuelle Adresse\" className=\"p-mb-4\">\n                    <Chip template={this.props.currentAccount} />\n                </Card> */}\n\n                <SavedContracts loadBenchmark={this.loadBenchmark} smartContractAddress={this.state.smartContractAddress} showError={this.showError} web3={this.props.web3} />\n\n\n                {this.state.smartContractAddress ? <BenchmarkInformations smartContractAddress={this.state.smartContractAddress} details={this.state.smartContractDetails} showError={this.showError} /> : \"\"}\n\n            </div>\n            <div className=\"p-col-7\">\n                {this.state.smartContractAddress ? <BenchmarkParticipation smartContractAddress={this.state.smartContractAddress} showError={this.showError} web3={this.props.web3} /> : <></>}\n            </div>\n\n        </div>)\n    }\n}\n\nexport default ParticipateScreenComponent"],"sourceRoot":""}